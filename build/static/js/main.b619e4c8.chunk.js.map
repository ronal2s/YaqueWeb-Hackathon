{"version":3,"sources":["utils/i18n.tsx","contexts/global.tsx","components/_textField.tsx","components/_textSelect.tsx","utils/models.tsx","routes/users/new.tsx","utils/functions.tsx","routes/users/index.tsx","utils/constants.tsx","globalStyles/index.tsx","routes/record/index.tsx","utils/enums.tsx","routes/survey/index.tsx","components/appbar.tsx","components/listItem.tsx","components/drawer.tsx","routes/container.tsx","routes/login/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["resources","en","translation","es","i18n","use","detector","reactI18nextModule","init","lng","navigator","language","userLanguage","fallbackLng","keySeparator","interpolation","escapeValue","GlobalContext","createContext","TextField","props","_onChange","e","onChange","name","target","value","console","warn","error","naked","InputBase","type","password","placeholder","multiline","rows","fullWidth","fullwidth","size","Grid","item","xs","sm","Number","InputProps","readOnly","disabled","InputLabelProps","shrink","fixedLabel","variant","label","CustomPicker","objValue","FormControl","style","width","InputLabel","Select","list","map","i","MenuItem","objLabel","key","models","user","fullname","role","customer","cedula","photo","quantity","costPerDay","image","childCategoryId","parentCategoryId","parentCategory","childCategory","rent","actualDate","promiseDate","rentDone","questions","question1","question2","question3","question4","withNamespaces","useState","form","setForm","t","handleInputs","Dialog","open","onClose","onEntering","selectedItem","DialogTitle","DialogContent","DialogActions","Button","color","onClick","axios","put","id","then","result","log","typeToast","data","msg","toast","catch","alert","post","Encode","input","charCode","str","output","block","charAt","charCodeAt","Error","SetStorage","window","localStorage","setItem","GetStorage","keyValue","getItem","isMobile","test","userAgent","loading","setLoading","setdata","modal","setModal","setSelectedItem","useEffect","getData","get","Fragment","container","justify","Paper","title","options","exportButton","search","columns","field","render","tableData","delete","isLoading","marginLeft","answers","RowView","styled","div","display","flexDirection","flexWrap","DrawerView","NavigationView","flex","ContentView","padding","View","centered","column","row","justifyContent","alignItems","undefined","fullsize","height","borderRadius","opacity","marginRight","button","wraps","Title","h1","bold","margin","SquareView","Separator","br","COLORS","Routes","Keys","Roles","setQuestion1","setQuestion2","setQuestion3","setQuestion4","aux","chartQ1","chartQ2","chartQ3","chartQ4","length","element","push","date","answer1","answer","answer2","answer3","answer4","spacing","valueField","argumentField","User","answerSurvey","a","serverDate","obj","question","success","useStyles","makeStyles","theme","root","flexGrow","menuButton","CustomAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onMenuPress","drawerOpened","Slide","in","Icon","Typography","rightButton","CustomLink","active","nameView","actualRoute","to","textDecoration","PRIMARY","transition","ListItem","backgroundColor","ListItemIcon","iconColor","DEFAULT_ICON_COLOR","icon","ListItemText","primary","CustomDrawer","transitionEnd","setTransitionEnd","Drawer","onTransitionEnd","PaperProps","borderTopRightRadius","borderWidth","onBackdropClick","closeDrawer","children","Header","Divider","PRIMARY_DARK","textAlign","drawer","setDrawer","setRoute","globalContext","useContext","onClickItem","rol","ADMIN","List","location","pathname","path","exact","component","Survey","Users","Record","USER","username","setform","logIn","logged","setContext","Role","CircularProgress","App","auxSetContext","object","context","Provider","Boolean","hostname","match","ReactDOM","StrictMode","rel","href","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b619e4c8.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport translationEN from './locales/en/translation.json';\r\nimport translationES from './locales/es/translation.json';\r\n\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  es: {\r\n    translation: translationES\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(reactI18nextModule as any) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    // lng: \"en\",\r\n    lng: navigator.language || (navigator as any).userLanguage,\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import { createContext } from \"react\";\r\n\r\nexport interface IUser {\r\n    logged: boolean,\r\n    fullname?: string,\r\n    rol?: string,\r\n}\r\n\r\nexport interface IGlobalContext {\r\n    user: IUser,\r\n    setContext: React.Dispatch<React.SetStateAction<IUser>>,\r\n}\r\n\r\nexport const GlobalContext = createContext<IGlobalContext | null>(null);","import React from \"react\";\r\nimport { TextField as TextFieldCore, InputBase, Grid, GridSize } from \"@material-ui/core\";\r\n\r\ninterface iTextField {\r\n    label?: string,\r\n    name?: string,\r\n    value?: string,\r\n    placeholder?: string,\r\n    onChange?: (name: string, value: string) => void,\r\n    variant?: \"filled\" | \"outlined\",\r\n    password?: boolean,\r\n    multiline?: boolean,\r\n    fixedLabel?: boolean,\r\n    rows?: number,\r\n    fullwidth?: boolean,\r\n    naked?: boolean,\r\n    gridItem?: boolean,\r\n    readOnly?: boolean\r\n    size?: number,\r\n    error?: string,\r\n    disabled?: boolean,\r\n}\r\n\r\nfunction TextField(props: iTextField) {\r\n\r\n    const _onChange = (e: any) => {\r\n        if (props.onChange && props.name) {\r\n            props.onChange(props.name, e.target.value);\r\n        } else {\r\n            console.warn(\"Props.name and Props.onChange not passed \")\r\n        }\r\n    }\r\n\r\n    // const error = String(props.error) == \"\"? false: true;\r\n    const error = typeof props.error === \"boolean\" ? props.error : false;\r\n\r\n    if (props.naked) {\r\n        return <InputBase value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth={props.fullwidth} />\r\n    }\r\n\r\n    if (props.size) {\r\n        return (\r\n            <Grid item xs={12} sm={Number(props.size) as GridSize}  >\r\n                <TextFieldCore error={error} InputProps={{\r\n                    readOnly: props.readOnly,                    \r\n                }} disabled={props.disabled} InputLabelProps={{shrink: props.fixedLabel}} variant={props.variant} label={props.label} value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TextFieldCore error={error} disabled={props.disabled} InputLabelProps={{shrink: props.fixedLabel}} variant={props.variant} label={props.label} value={props.value} type={props.password ? \"password\" : \"text\"} placeholder={props.placeholder} onChange={_onChange} multiline={props.multiline} rows={props.rows} fullWidth={props.fullwidth} />\r\n    )\r\n}\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Select, MenuItem, Grid, GridSize } from \"@material-ui/core\";\r\n\r\ninterface iCustomPicker {\r\n    label?: string,\r\n    name?: string,\r\n    value?: string,\r\n    objLabel?: string,\r\n    // list?: string[] | number[],\r\n    list?: any[],\r\n    size?: number,\r\n    error?: boolean | string,\r\n    placeholder?: string,\r\n    onChange?: (name: string, value: string | number) => void,\r\n    fullwidth?: boolean,\r\n    variant?: \"filled\" | \"standard\" | \"outlined\",\r\n    objValue?: string\r\n}\r\n\r\nfunction CustomPicker(props: iCustomPicker) {\r\n\r\n    const _onChange = (e: any) => {\r\n        if (props.onChange && props.name) {\r\n            props.onChange(props.name, props.objValue? e.target.value[props.objValue]: e.target.value);\r\n        } \r\n        else {\r\n            console.warn(\"Props.name and Props.onChange not passed \")\r\n        }\r\n    }\r\n\r\n    const error = typeof props.error === \"boolean\" ? props.error : false;\r\n\r\n    if (props.fullwidth) {\r\n        return (\r\n            <FormControl variant={props.variant} style={{ width: \"100%\" }} >\r\n                <InputLabel>{props.label}</InputLabel>\r\n                <Select variant={props.variant} value={props.value} placeholder={props.placeholder} onChange={_onChange} error={error} >\r\n                    {props.list?.map((value, i) => {\r\n                        return (\r\n                            <MenuItem value={props.objLabel ? value : value} key={i} >{props.objLabel ? value[props.objLabel] : value}</MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={props.size as GridSize}>\r\n            <FormControl variant={props.variant} style={{ width: \"100%\" }}  >\r\n                <InputLabel>{props.label}</InputLabel>\r\n                <Select variant={props.variant} value={props.value} placeholder={props.placeholder} onChange={_onChange} error={error} >\r\n                    {props.list?.map((value, i) => {\r\n                        return (\r\n                            <MenuItem value={props.objLabel ? value : value} key={i} >{props.objLabel ? value[props.objLabel] : value}</MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CustomPicker;","const models = {\r\n    user: {\r\n        fullname: \"\",\r\n        user: \"\",\r\n        role: \"\",\r\n        // id: \"\",\r\n        password: \"\"\r\n    },\r\n    customer: {\r\n        // id: \"\",\r\n        fullname: \"\",\r\n        cedula: \"\",\r\n        photo: \"\",\r\n        // rentList: []\r\n    },\r\n    item: {\r\n        // id: \"\",\r\n        name: \"\",\r\n        quantity: \"\",\r\n        costPerDay: \"\",\r\n        image: \"\",\r\n        childCategoryId: \"\",\r\n        parentCategoryId: \"\",\r\n    },\r\n    parentCategory: {\r\n        // id: \"\",\r\n        name: \"\",\r\n        // childCategories: []\r\n    },\r\n    childCategory: {\r\n        // id: \"\",\r\n        name: \"\",\r\n        // items: []\r\n    },\r\n    rent: {\r\n        // id: \"\",\r\n        customer: {},\r\n        item: [],\r\n        actualDate: \"\",\r\n        promiseDate: \"\",\r\n        rentDone: false\r\n    },\r\n    questions: {\r\n        question1: \"\",\r\n        question2: \"\",\r\n        question3: \"\",\r\n        question4: \"\",\r\n    }\r\n}\r\n\r\nexport default models;","import React, { useState } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, FormControl, DialogActions, Button, ListItemSecondaryActionClassKey } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n//Custom components\r\nimport TextField from \"../../components/_textField\";\r\nimport TextPicker from \"../../components/_textSelect\";\r\n//Utils\r\nimport IUser from \"./index.d\";\r\nimport models from \"../../utils/models\";\r\nimport i18n from \"../../utils/i18n\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\ninterface IModalNew {\r\n    open: boolean,\r\n    selectedItem: IUser | null,\r\n    onClose: () => void,\r\n\r\n}\r\n\r\nfunction ModalNew(props: IModalNew | any) {\r\n    // const [form, setForm] = useState({ name: \"Miguel\", lastname: \"Paulino\", phone: \"809413265\" });\r\n    const [form, setForm] = useState({ ...models.user });\r\n    const t = (props as any).t;\r\n\r\n    const onEntering = () => {\r\n        if (props.selectedItem) {\r\n            setForm({ ...props.selectedItem as any })\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        setForm({ ...models.user });\r\n        props.onClose();\r\n    }\r\n\r\n    const handleInputs = (name: string, value: any) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    const addNewItem = () => {\r\n        // axios.post(\"/api/students\", { matricula: 20200102, name: \"Junior\", lastname: \"Mosquea\", phone: \"8293733603\" })\r\n        if (props.selectedItem) {\r\n            axios.put(\"/api/users\", { ...form, id: props.selectedItem.id })\r\n                .then(result => {\r\n                    console.log(\"Resultado: \", result);\r\n                    const typeToast = !result.data ? \"error\" : \"success\";\r\n                    const msg = !result.data ? t(\"An error has ocurred\") : \"Item updated successfully\";\r\n                    toast[typeToast](msg);\r\n                    if (!result.data.error) props.onClose();\r\n                })\r\n                .catch(error => alert(error))\r\n        } else {\r\n            axios.post(\"/api/users\", { ...form })\r\n                .then(result => {\r\n                    console.log(\"Resultado: \", result);\r\n                    const typeToast = !result.data.id ? \"error\" : \"success\";\r\n                    const msg = !result.data.id ? t(\"An error has ocurred\") : t(\"Item added successfully\");\r\n                    toast[typeToast](msg);\r\n                    if (!result.data.error) props.onClose();\r\n                })\r\n                .catch(error => alert(error))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={onClose} onEntering={onEntering} >\r\n            <DialogTitle>{props.selectedItem ? t(\"Update\") : t(\"New\")} {t(\"User\")}</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl>\r\n                    <TextField label={t(\"Fullname\")} name=\"fullname\" value={form.fullname} onChange={handleInputs} />\r\n                    <TextField label={t(\"User\")} name=\"user\" value={form.user} onChange={handleInputs} />\r\n                    {/* <TextField label=\"Role\" name=\"role\" value={form.role} onChange={handleInputs} /> */}\r\n                    <TextPicker label={t(\"Role\")} name=\"role\" list={[\"ADMIN\", \"USER\"]} value={form.role} onChange={handleInputs} />\r\n                    <TextField label={t(\"Password\")} name=\"password\" value={form.password} password onChange={handleInputs} />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"secondary\" onClick={() => props.onClose()} >{t(\"Close\")}</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={addNewItem} >\r\n                    {t(\"Accept\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(ModalNew);","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const getUIDCode = () => {\r\n    return uuidv4();\r\n}\r\nexport const Encode = (input: string) => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let str = input;\r\n    let output = '';\r\n\r\n    for (let block = 0, charCode, i = 0, map = chars;\r\n        str.charAt(i | 0) || (map = '=', i % 1);\r\n        output += map.charAt((63 & block) >> 8 - i % 1 * 8)) { //Si deja de funcionar quitarle el () dentro de 63 & block\r\n\r\n        charCode = str.charCodeAt(i += 3 / 4);\r\n\r\n        if (charCode > 0xFF) {\r\n            throw new Error(\"'encoded' failed: The string to be encoded contains characters outside of the Latin1 range.\");\r\n        }\r\n\r\n        block = (block << 8) | charCode;\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport const SetStorage = (key: string, data: string) => {\r\n    // window.localStorage.setItem(Encode(key), Encode(data));\r\n    window.localStorage.setItem(key, data);\r\n}\r\n\r\nexport const GetStorage = (key: string) => {\r\n    let data: string = \"\"\r\n    let keyValue = window.localStorage.getItem(Encode(key));\r\n    data = keyValue? keyValue: \"\"\r\n    // return atob(data);\r\n    return window.localStorage.getItem(key);\r\n}\r\n\r\n\r\nexport const Logout = () => {\r\n    window.localStorage.clear();\r\n    // window.location = \"/auth\"\r\n}\r\n\r\nexport const Islogin = () => {\r\n    let login = window.localStorage.getItem(Encode(\"login\"));\r\n    return login === null ? false : true;\r\n\r\n}\r\n\r\nexport const isMobile = () => {\r\n    let isMobile = false\r\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        isMobile = true;\r\n    }\r\n    return isMobile;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, Paper, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { withNamespaces } from 'react-i18next';\r\n//Modals\r\nimport ModalNew from \"./new\";\r\n//Utils\r\nimport { isMobile } from \"../../utils/functions\";\r\nimport IUser from \"./index.d\";\r\n\r\nfunction Users({ t }: any) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setdata] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState<IUser | null>(null);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        setLoading(true);\r\n        axios.get(\"/api/users\")\r\n            .then(result => {\r\n                console.log(\"/api/users\", result.data)\r\n                setdata(result.data)\r\n                setLoading(false);\r\n            })\r\n            .catch(error => alert(error));\r\n    }\r\n\r\n    const deleteItem = (id?: number) => {\r\n        axios.delete(`/api/users/delete/${id}`)\r\n            .then(result => {\r\n                setdata(result.data)\r\n            })\r\n            .catch(error => alert(error));\r\n    }\r\n\r\n    const editItem = (item: IUser) => {\r\n        setSelectedItem(item);\r\n        setModal(true);\r\n    }\r\n\r\n    const openmodal = () => {\r\n        setSelectedItem(null);\r\n        setModal(true);\r\n    }\r\n\r\n    const closemodal = () => {\r\n        getData();\r\n        setModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container justify=\"flex-start\" >\r\n                <Grid item sm={6} >\r\n                    <Paper>\r\n                        {/* <Typography variant=\"h2\">Inventario</Typography> */}\r\n                        <MaterialTable\r\n                            style={{ width: isMobile() ? 350 : \"100%\" }}\r\n                            title=\"\"\r\n                            options={{\r\n                                exportButton: true,\r\n                                search: false\r\n                            }}\r\n                            columns={[\r\n                                { title: t(\"Fullname\"), field: \"fullname\" },\r\n                                { title: t(\"Role\"), field: \"role\" },\r\n                                {\r\n                                    title: \"\", render: (tableData: IUser) => <div>\r\n                                        <Button color=\"secondary\" onClick={() => deleteItem(tableData.id)} >{t(\"Delete\")}</Button>\r\n                                        <Button color=\"primary\" onClick={() => editItem(tableData)} >{t(\"Edit\")}</Button>\r\n                                    </div>\r\n                                }\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={data}\r\n                        />\r\n                        <br />\r\n                        <div style={{ marginLeft: 10 }} >\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={openmodal} >{t(\"New\")}</Button>\r\n                        </div>\r\n                        <br />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <ModalNew open={modal} selectedItem={selectedItem} onClose={closemodal} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(Users);","const Drawer_size = 200;\r\nconst questions = {\r\n    question1: \"Did the talks where you participated meet your expectations?\",\r\n    question2: \"Did the exhibitors show mastery of the subject?\",\r\n    question3: \"Were the event facilities comfortable for you?\",\r\n    question4: \"Do you have any comments for the organizers?\"\r\n}\r\n\r\nconst answers = {\r\n    'Sí': \"Yes\",\r\n    \"Yes\": \"Yes\",\r\n    \"No\": \"No\"\r\n}\r\n\r\nexport {\r\n    Drawer_size,\r\n    questions, answers\r\n}","import styled from 'styled-components';\r\nimport { Drawer_size } from '../utils/constants';\r\n\r\n\r\nconst RowView = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\"\r\n})\r\n\r\nconst DrawerView = styled.div({\r\n    width: Drawer_size\r\n})\r\n\r\nconst NavigationView = styled.div({\r\n    flex: 1,\r\n})\r\n\r\nconst ContentView = styled.div({\r\n    padding: 10\r\n})\r\nconst View = styled.div`\r\ndisplay: ${(props: {\r\n    centered?: boolean, fullsize?: boolean, color?: string, column?: boolean, height?: number, width?: number, borderRadius?: number, opacity?: number,\r\n    row?: boolean, wraps?: boolean, justifyContent?: \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\", button?: boolean,\r\n    marginLeft?: number, marginRight?: number, alignItems?: \"center\" | \"flex-end\" | \"flex-start\"\r\n}) => props.centered || props.column || props.row ? \"flex\" : \"\"};\r\njustify-content: ${props => props.centered ? \"center\" : props.justifyContent ? props.justifyContent : \"\"}; \r\nalign-items: ${props => props.centered ? \"center\" : props.alignItems ? props.alignItems : undefined}; \r\nbackground-color: ${props => props.color ? props.color : \"white\"};\r\nheight: ${props => props.fullsize ? \"100vh\" : props.height ? `${props.height}px` : \"\"}; \r\nwidth: ${props => props.fullsize ? \"100%\" : props.width ? `${props.width}px` : \"\"}; \r\nflex-direction: ${props => props.column ? \"column\" : props.row ? \"row\" : \"column\"};\r\nborder-radius: ${props => props.borderRadius ? `${props.borderRadius}px` : \"\"};\r\nopacity: ${props => props.opacity ? props.opacity : 1};\r\nmargin-left: ${props => props.marginLeft ? `${props.marginLeft}px` : 0};\r\nmargin-right: ${props => props.marginRight ? `${props.marginRight}px` : 0};\r\ncursor: ${props => props.button ? \"pointer\" : \"\"};\r\nflex-wrap: ${props => props.wraps ? \"wrap\" : undefined}\r\n`\r\n\r\nconst Title = styled.h1`\r\n    text-align: ${(props: { centered?: boolean, color?: string, margin?: number, size?: number, bold?: boolean, }) => props.centered ? \"center\" : \"left\"};\r\n    font-weight: ${props => props.bold ? 'bold' : 100};\r\n    color:${props => props.color ? props.color : \"black\"};\r\n    margin: ${props => props.margin ? `${props.margin}px` : 0};\r\n    font-size: ${props => props.size ? `${props.size}px` : undefined};\r\n`\r\n\r\n\r\nconst SquareView = styled.div`\r\n    width: 300px; height: 250px;\r\n    background-color: white; \r\n    border-radius: 10px; \r\n    box-shadow: 2px 3px 16px 3px;\r\n`\r\n\r\nconst Separator = styled.div`\r\n    margin-top: ${(props: { size?: number }) => props.size ? `${props.size}px` : \"10px\"}\r\n`\r\n\r\nconst BreakLine = styled.br``\r\n\r\nexport {\r\n    RowView,\r\n    DrawerView,\r\n    NavigationView,\r\n    ContentView,\r\n    SquareView,\r\n    Separator,\r\n    BreakLine,\r\n    Title,\r\n    View\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Chart,\r\n    PieSeries,\r\n    Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { withNamespaces } from 'react-i18next';\r\n//Utils\r\nimport { isMobile } from \"../../utils/functions\";\r\nimport IRecord from \"./index.d\";\r\nimport { Title } from \"../../globalStyles\";\r\n\r\nfunction Rent({ t }: any) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState<IRecord | null>(null);\r\n    const [selectedRent, setSelectedRent] = useState(null);\r\n    const [modalItems, setModalsItems] = useState(false);\r\n\r\n    const [data, setdata] = useState([]);\r\n    const [promData, setPromData] = useState([]);\r\n    const [question1, setQuestion1] = useState([]);\r\n    const [question2, setQuestion2] = useState([]);\r\n    const [question3, setQuestion3] = useState([]);\r\n    const [question4, setQuestion4] = useState([]);\r\n    const [notParsedDate, setNotParseData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        setLoading(true);\r\n        axios.get(\"/api/surveys\")\r\n            .then(result => {\r\n                console.log(\"/api/surveys\", result.data)\r\n                const aux = [];\r\n                const chartQ1 = [\r\n                    { label: t(\"Yes\"), value: 0 },\r\n                    { label: t(\"No\"), value: 0 },\r\n                ]\r\n                const chartQ2 = [\r\n                    { label: t(\"Yes\"), value: 0 },\r\n                    { label: t(\"No\"), value: 0 },\r\n                ]\r\n                const chartQ3 = [\r\n                    { label: t(\"Yes\"), value: 0 },\r\n                    { label: t(\"No\"), value: 0 },\r\n                ]\r\n                const chartQ4 = [\r\n                ]\r\n                for (let i = 0; i < result.data.length; i++) {\r\n                    const element = result.data[i];\r\n                    aux.push({\r\n                        user: element.user,\r\n                        date: element.date,\r\n                        answer1: element.questions[0].answer,\r\n                        answer2: element.questions[1].answer,\r\n                        answer3: element.questions[2].answer,\r\n                        answer4: element.questions[3].answer,\r\n                    });\r\n                    //Chart data Q1\r\n                    if (element.questions[0].answer == \"Yes\") chartQ1[0].value++;\r\n                    if (element.questions[0].answer == \"No\") chartQ1[1].value++;\r\n                    \r\n                    //Chart data Q2\r\n                    if (element.questions[1].answer == \"Yes\") chartQ2[0].value++;\r\n                    if (element.questions[1].answer == \"No\") chartQ2[1].value++;\r\n                    \r\n                    //Chart data Q3\r\n                    if (element.questions[2].answer == \"Yes\") chartQ3[0].value++;\r\n                    if (element.questions[2].answer == \"No\") chartQ3[1].value++;\r\n                    \r\n                    //Chart data Q4\r\n                    if(element.questions[3].answer) chartQ4.push({ label: element.questions[3].answer, value: 1 },)\r\n\r\n                }\r\n                setdata(aux as any)\r\n                setQuestion1(chartQ1 as any);\r\n                setQuestion2(chartQ2 as any);\r\n                setQuestion3(chartQ3 as any);\r\n                setQuestion4(chartQ4 as any);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => alert(error));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container justify=\"flex-start\" spacing={2} >\r\n                <Grid item sm={12} xs={12} >\r\n                    <Paper>\r\n                        <MaterialTable\r\n                            style={{ width: isMobile() ? 350 : \"100%\" }}\r\n                            title=\"\"\r\n                            options={{\r\n                                exportButton: true,\r\n                                search: false\r\n                            }}\r\n                            columns={[\r\n                                { title: t(\"User\"), field: \"user\" },\r\n                                { title: t(\"Date\"), field: \"date\" },\r\n                                { title: t(\"Question1\"), field: \"answer1\" },\r\n                                { title: t(\"Question2\"), field: \"answer2\" },\r\n                                { title: t(\"Question3\"), field: \"answer3\" },\r\n                                { title: t(\"Question4\"), field: \"answer4\" },\r\n                            ]}\r\n                            isLoading={loading}\r\n                            data={data}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} >\r\n                    <Title>{t(\"Question1\")}</Title>\r\n                    <Chart data={question1} >\r\n                        <Legend />\r\n                        <PieSeries valueField=\"value\" argumentField=\"label\" />\r\n                    </Chart>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} >\r\n                    <Title>{t(\"Question2\")}</Title>\r\n                    <Chart data={question2} >\r\n                        <Legend />\r\n                        <PieSeries valueField=\"value\" argumentField=\"label\" />\r\n                    </Chart>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} >\r\n                    <Title>{t(\"Question3\")}</Title>\r\n                    <Chart data={question3} >\r\n                        <Legend />\r\n                        <PieSeries valueField=\"value\" argumentField=\"label\" />\r\n                    </Chart>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} >\r\n                    <Title>{t(\"Question4\")}</Title>\r\n                    <Chart data={question4} >\r\n                        <Legend />\r\n                        <PieSeries valueField=\"value\" argumentField=\"label\" />\r\n                    </Chart>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(Rent);","export enum COLORS {\r\n    DEFAULT_ICON_COLOR = \"rgba(0, 0, 0, 0.54)\",\r\n    PRIMARY = \"#3f51b5\",\r\n    PRIMARY_DARK = \"#2d3a87\"\r\n}\r\n\r\nexport enum Routes {\r\n    Screen1 = \"/\",\r\n    Screen2 = \"/Screen2\",\r\n    INVENTORY = \"/Inventario\",\r\n    ORDER = \"/Orden\",\r\n    PRODUCTS_SUPPLIER = \"/ProductosSuplidores\",\r\n    CONSUMPTION = \"/Consumos\",\r\n}\r\n\r\nexport enum Keys {\r\n    User = \"user\",\r\n    Role = \"role\"\r\n}\r\n\r\nexport enum Roles {\r\n    ADMIN = \"ADMIN\",\r\n    USER = \"USER\"\r\n}","import React, { useState } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, FormControl, DialogActions, Button, ListItemSecondaryActionClassKey, Paper, Grid } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n//Custom components\r\nimport TextField from \"../../components/_textField\";\r\nimport TextPicker from \"../../components/_textSelect\";\r\n//Utils\r\nimport models from \"../../utils/models\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { GetStorage, SetStorage } from \"../../utils/functions\";\r\nimport { Keys } from \"../../utils/enums\";\r\nimport { answers, questions } from \"../../utils/constants\";\r\n\r\nSetStorage(Keys.User, \"ronal2s\");\r\n\r\nfunction ModalNew(props: any) {\r\n    // const [form, setForm] = useState({ name: \"Miguel\", lastname: \"Paulino\", phone: \"809413265\" });\r\n    const [form, setForm] = useState({ ...models.questions });\r\n    const t = (props as any).t;\r\n\r\n    const handleInputs = (name: string, value: any) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    const answerSurvey = async () => {\r\n        const serverDate = await axios.get(\"/api/date\");\r\n        \r\n        const obj = {\r\n            user: GetStorage(Keys.User),\r\n            date: serverDate.data,\r\n            questions:\r\n                [\r\n                    //@ts-ignore\r\n                    { question: questions.question1, answer: answers[form.question1] },\r\n                    //@ts-ignore\r\n                    { question: questions.question2, answer: answers[form.question2] },\r\n                    //@ts-ignore\r\n                    { question: questions.question3, answer: answers[form.question3] },\r\n                    //@ts-ignore\r\n                    { question: questions.question4, answer: answers[form.question4] },\r\n                ]\r\n        }\r\n        console.log(\"Questions: \", obj.questions)\r\n        axios.post(\"/api/surveys\", obj)\r\n            .then(result => toast.success(t(\"Thanks for your response\")))\r\n            .catch(error => toast.error(t(\"An error has ocurred\")))\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container justify=\"flex-start\" >\r\n                <Grid item sm={6} >\r\n                    <Paper style={{ padding: 10 }} >\r\n                        <TextPicker label={t(\"Question1\")} name=\"question1\" list={[t(\"Yes\"), t(\"No\")]} value={form.question1} onChange={handleInputs} /> <br />\r\n                        <TextPicker label={t(\"Question2\")} name=\"question2\" list={[t(\"Yes\"), t(\"No\")]} value={form.question2} onChange={handleInputs} /> <br />\r\n                        <TextPicker label={t(\"Question3\")} name=\"question3\" list={[t(\"Yes\"), t(\"No\")]} value={form.question3} onChange={handleInputs} /> <br />\r\n                        <TextField label={t(\"Question4\")} fullwidth name=\"question4\" value={form.question4} onChange={handleInputs} />\r\n\r\n\r\n                        {/* <TextField label={t(\"Fullname\")} name=\"fullname\" value={form.fullname} onChange={handleInputs} />\r\n                        <TextField label={t(\"User\")} name=\"user\" value={form.user} onChange={handleInputs} />\r\n                        <TextField label={t(\"Password\")} name=\"password\" value={form.password} password onChange={handleInputs} /> */}\r\n                        {/* <FormControl>\r\n                        </FormControl> */}\r\n                        <DialogActions>\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={answerSurvey} >\r\n                                {t(\"Accept\")}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(ModalNew);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Icon, Typography, IconButton, Slide} from '@material-ui/core';\r\n\r\ninterface ICustomAppBar {\r\n    title: string,\r\n    drawerOpened?: boolean,\r\n    rightButton?: React.ReactNode,\r\n    onMenuPress?: () => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction CustomAppBar(props: ICustomAppBar) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{padding: 10}} >\r\n      {/* <AppBar position=\"static\" style={{backgroundColor: \"#A9A9A9\"}} > */}\r\n      <AppBar position=\"static\" style={{borderRadius: 25}} >\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={props.onMenuPress} >            \r\n            {props.drawerOpened && \r\n            <Slide in>\r\n            <Icon>\r\n              arrow_back\r\n            </Icon>\r\n            </Slide>\r\n            }\r\n            {!props.drawerOpened && \r\n            <Slide in>\r\n            <Icon>\r\n              menu\r\n            </Icon>\r\n            </Slide>\r\n            }\r\n            \r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          {props.rightButton}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomAppBar;","import React from \"react\";\r\nimport { ListItem, ListItemIcon, ListItemText, Icon } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n//Utils\r\nimport { COLORS } from \"../utils/enums\";\r\n\r\ninterface ICustomLink {\r\n    title: string,\r\n    icon?: string,\r\n    iconColor?: string,\r\n    active?: boolean,\r\n    actualRoute?: string,\r\n    nameView: string,\r\n    onClick?: (name?: any) => void\r\n}\r\n\r\nfunction CustomLink(props: ICustomLink) {\r\n\r\n    const onClick = (name?: string) => {\r\n        if (props.onClick) {\r\n            props.onClick(name);\r\n        }\r\n    }\r\n\r\n    const active = props.active ? props.active : (props.nameView === props.actualRoute)\r\n\r\n    if (active) {\r\n        return (\r\n            <Link to={props.nameView} style={{ textDecoration: \"none\", color: COLORS.PRIMARY, transition: \"color .8s linear\" }}>\r\n                <ListItem button style={{\r\n                    backgroundColor: \"white\",\r\n                    transition: \"background-color .8s linear\"\r\n                }}\r\n                    onClick={() => onClick(props.nameView)}>\r\n                    <ListItemIcon>\r\n                        <Icon style={{ color: active ? COLORS.PRIMARY : (props.iconColor ? props.iconColor : COLORS.DEFAULT_ICON_COLOR) }} >{props.icon}</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={props.title} />\r\n                </ListItem>\r\n            </Link>\r\n        )\r\n    }\r\n    return (\r\n        <Link to={props.nameView} style={{ textDecoration: \"none\", color: \"white\" }}  >\r\n            <ListItem button onClick={() => onClick(props.nameView)}>\r\n                <ListItemIcon>\r\n                    <Icon style={{ color: props.iconColor ? props.iconColor : COLORS.DEFAULT_ICON_COLOR }} >{props.icon}</Icon>\r\n                </ListItemIcon>\r\n                <ListItemText primary={props.title} />\r\n            </ListItem>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CustomLink;","import React, { useState, useEffect } from 'react';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { Drawer_size } from '../utils/constants';\r\nimport { DrawerView } from '../globalStyles';\r\nimport { isMobile } from '../utils/functions';\r\nimport { COLORS } from '../utils/enums';\r\n\r\ninterface IDrawer {\r\n    children?: React.ReactNode,\r\n    open: boolean,\r\n    closeDrawer?: () => void\r\n}\r\n\r\nfunction CustomDrawer(props: IDrawer) {\r\n    const [transitionEnd, setTransitionEnd] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTransitionEnd(!props.open);        \r\n    }, [props.open])\r\n\r\n    const endTransition = () => {\r\n        if (!props.open) {\r\n            setTransitionEnd(true);\r\n        }\r\n    };\r\n\r\n    const closeDrawer = () => {\r\n        if(props.closeDrawer) {\r\n            props.closeDrawer();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <DrawerView style={{ width: transitionEnd ? 0 : Drawer_size, transition: \"width .5s linear\", marginRight: 10 }} >\r\n            <Drawer variant={isMobile() ? \"temporary\" : \"persistent\"} open={props.open} onTransitionEnd={endTransition} \r\n                PaperProps={{ style: { width: Drawer_size, backgroundColor: COLORS.PRIMARY, borderTopRightRadius: 25, borderWidth: 0} }} onBackdropClick={closeDrawer} >\r\n                {props.children}\r\n            </Drawer>\r\n        </DrawerView>\r\n    );\r\n}\r\n\r\nexport default CustomDrawer;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Divider, List } from '@material-ui/core';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n    BrowserRouter as Router, Switch, Route, Redirect,\r\n} from \"react-router-dom\";\r\n//Screens\r\nimport Users from \"./users\";\r\nimport Record from \"./record\";\r\nimport Survey from \"./survey\";\r\n//Custom components\r\nimport CustomAppBar from '../components/appbar';\r\nimport CustomLink from '../components/listItem';\r\nimport CustomDrawer from '../components/drawer';\r\n//Utils\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { GetStorage, isMobile } from '../utils/functions';\r\nimport { COLORS, Keys, Roles } from '../utils/enums';\r\n//Custom styles\r\nimport { RowView, NavigationView, ContentView } from '../globalStyles';\r\nimport { GlobalContext } from '../contexts/global';\r\n\r\nconst Header = ({ title }: { title: string }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Divider />\r\n            <div style={{ backgroundColor: COLORS.PRIMARY_DARK, height: 100 }} >\r\n                <h1 style={{ color: \"white\", textAlign: \"center\" }} >{title}</h1>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction App({ t }: any) {\r\n\r\n    const [drawer, setDrawer] = useState(!isMobile());\r\n    const [actualRoute, setRoute] = useState(\"\");\r\n    \r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    const handleDrawer = () => {\r\n        setDrawer(!drawer)\r\n    }\r\n\r\n    const closeDrawer = () => setDrawer(false);\r\n\r\n    const onClickItem = (name: string) => {\r\n        setRoute(name);\r\n    }\r\n\r\n    // alert(globalContext?.user.rol)\r\n    return (\r\n        <Router>\r\n            <React.Fragment >\r\n                <RowView >\r\n                    {globalContext?.user.rol === Roles.ADMIN &&\r\n                        <CustomDrawer open={drawer} closeDrawer={closeDrawer} >\r\n                            <Header title={t(\"DrawerTitle\")} />\r\n                            <Divider />\r\n                            <List>\r\n                                <CustomLink title={t('Survey')} icon=\"mail\" iconColor=\"white\" nameView=\"/survey\" actualRoute={actualRoute} onClick={onClickItem} />\r\n                                {/* Mostrar estos links si el user es admin */}\r\n                                {globalContext?.user.rol === Roles.ADMIN && <>\r\n                                    <CustomLink title={t('Users')} icon=\"mail\" iconColor=\"white\" nameView=\"/users\" actualRoute={actualRoute} onClick={onClickItem} />\r\n                                    <CustomLink title={t('Record')} icon=\"mail\" iconColor=\"white\" nameView=\"/record\" actualRoute={actualRoute} onClick={onClickItem} />\r\n                                </>}\r\n                            </List>\r\n                        </CustomDrawer>}\r\n                    <NavigationView>\r\n                        <CustomAppBar title={window.location.pathname} onMenuPress={handleDrawer} drawerOpened={drawer} />\r\n                        <ContentView>\r\n                            <Switch>\r\n                                <Route path=\"/survey\" exact component={Survey} />\r\n                                {/* Mostrar estos links si el user es admin */}\r\n                                {globalContext?.user.rol === Roles.ADMIN && <>\r\n                                    <Route path=\"/users\" exact component={Users} />\r\n                                    <Route path=\"/record\" exact component={Record} />\r\n                                </>}\r\n                                {globalContext?.user.rol === Roles.USER && <>\r\n                                    <Redirect to=\"/survey\" />\r\n                                </>}\r\n                            </Switch>\r\n                        </ContentView>\r\n                    </NavigationView>\r\n                </RowView>\r\n                <ToastContainer />\r\n            </React.Fragment>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withNamespaces()(App);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Title, View, SquareView, Separator } from \"../../globalStyles\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n//Custom components\r\nimport TextField from \"../../components/_textField\";\r\nimport { COLORS, Keys } from \"../../utils/enums\";\r\n//Services\r\nimport { SetStorage } from \"../../utils/functions\";\r\nimport { GlobalContext, IUser } from \"../../contexts/global\";\r\n\r\nfunction Login({ t }: any) {\r\n    const [form, setform] = useState({ username: \"admin\", password: \"mayonesa\" });\r\n    const [loading, setLoading] = useState(false);\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    const handleInputs = (name: string, value: string) => {\r\n        setform({ ...form, [name]: value });\r\n        console.log(form)\r\n    }\r\n\r\n    const logIn = async () => {\r\n        axios.post(\"/api/login\", { user: form.username, password: form.password })\r\n            .then(result => {\r\n                console.log(\"Login data:\", result.data)\r\n                if (result.data.rol) {\r\n                    // alert(\"si\")\r\n                    const obj = { user: { logged: true, fullname: result.data.fullname, rol: result.data.rol } }\r\n                    globalContext?.setContext({ ...obj as any });\r\n                    SetStorage(Keys.User, form.username);\r\n                    SetStorage(Keys.Role, result.data.rol);\r\n                } else {\r\n                    toast.error(t(\"Password doesn't match\"));\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <View centered fullsize color={COLORS.PRIMARY} >\r\n                <SquareView  >\r\n                    <Separator />\r\n                    <Title centered >P R A C T I C A  4</Title>\r\n                    <Separator />\r\n                    <View centered column >\r\n                        <TextField label={t(\"User\")} variant=\"filled\" name=\"username\" value={form.username} onChange={handleInputs} />\r\n                        <Separator />\r\n                        <TextField label={t(\"Password\")} variant=\"filled\" name=\"password\" password value={form.password} onChange={handleInputs} />\r\n                        <Separator />\r\n                        <Separator />\r\n                        <Button color=\"primary\" variant=\"outlined\" onClick={logIn} >\r\n                            {loading && <CircularProgress size={20} />}\r\n                            {!loading && t(\"Login\")}\r\n                        </Button>\r\n                    </View>\r\n                </SquareView>\r\n            </View>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withNamespaces()(Login);","import React, { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { GlobalContext, IGlobalContext } from \"./contexts/global\";\r\n//Containers\r\nimport Container from \"./routes/container\";\r\nimport Login from \"./routes/login\";\r\n\r\n\r\nfunction App() {\r\n  const auxSetContext = (object: any) => {\r\n    setContext({ ...context, ...object });\r\n  }\r\n  const [context, setContext] = useState<IGlobalContext>({\r\n    user: { logged: false, fullname: \"\", rol: \"\" },\r\n    setContext: auxSetContext\r\n  })\r\nconsole.log(context.user)\r\n  return (\r\n    <GlobalContext.Provider value={{ ...context, setContext: auxSetContext }} >\r\n      {context.user.logged ? <Container /> : <Login />}\r\n      <ToastContainer />\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './utils/i18n.tsx';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}